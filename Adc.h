/*
 * Adc.h
 *
 * Created: 07.02.2020 19:46:20
 *  Author: Vl
 */ 


//#ifndef ADC_H_
//#define ADC_H_
//
//
//
//
//
//#endif /* ADC_H_ */

void AdcInit()
{
	
//; Итак что тут у нас:
//; ADEN = 1 - разрешаем АЦП
//; ADIE = 1Разрешаем прерывания.
//; ADSC = 1 Запускаем преобразование (первое, дальше автоматом)
//; ADATE = 1 Непрерывные последовательные преобразования, одно за другим.
//; ADPS2..0 = 3 Делитель частоты на 8 - так у меня получается оптимальная частота.


//;А тут выбираем откуда брать будем сигнал
//;REFS -- 0b[01]000101 первые два бита - напряжение с входа AVCC
//;ADLAR --0b01[0]00101следующий бит выравнивание по правому краю
//;MUX -- 0b010[00000]</B>Сигнал на вход идет с 3 канала АЦП.

//ион - напряжение питания, выравнивание влево, нулевой канал
ADMUX = (0<<REFS1)|(1<<REFS0)|(1<<ADLAR)|(0<<MUX3)|(0<<MUX2)|(1<<MUX1)|(1<<MUX0); 
//вкл. ацп, режим одиночного преобр., разрешение прерывания,частота преобр. = FCPU/128? 
ADCSRA = (1<<ADEN)|(0<<ADSC)|(1<<ADATE)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);

ADCSRA |= (1<<ADSC);

}


ISR(ADC_vect){
	PotentValue = ADCH;
}
